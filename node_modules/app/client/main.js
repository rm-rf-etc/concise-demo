
/*

Semi-colon line terminators are just FUD. If your minifier can't handle this code, switch to one that is JS-compliant.
http://blog.izs.me/post/2353458699/an-open-letter-to-javascript-leaders-regarding
http://inimino.org/~inimino/blog/javascript_semicolons

The only time you EVER need a semi-colon for statement termination:
;[1,2,3].map(function(val){ 'do stuff' })
;(function(){ 'do stuff' })

*/

var USE_FIREBASE = false


;(function(){

	function createRoutes(){
		concise.routes
		('/', HomeCtrl())
		('/join', HomeCtrl())
		('/todos', TodoAllCtrl())
		('/todos-complete', TodoCheckedCtrl())
		('/todos-incomplete', TodoUncheckedCtrl())
	}


	var concise = require('concise')
	// v For use in debugging.
	window.concise = concise


	new concise.Model('list',[])

	if (USE_FIREBASE) {
		var api = new Firebase('https://blazing-inferno-1661.firebaseio.com/')
		api.child('users/rob/todos').on('value', function(snapshot){
			concise.models.list = snapshot.val()
		})
	} else {
		concise.get('/data/todos.json',function(data){
			concise.models.list = data
		})
	}

	var uis = {
		todo: require('app/client/ui/todo-ui.js'),
		auth_me: require('app/client/ui/auth-form-ui.js')
	}

	createRoutes()

	function TodoAllCtrl(){
		return new concise.Controller('todo-all', function(){
			this.view = uis.todo
		})
	}

	function TodoCheckedCtrl(){
		return new concise.Controller('todo-complete', function(){
			this.show_when = true
			this.view = uis.todo
		})
	}

	function TodoUncheckedCtrl(){
		return new concise.Controller('todo-incomplete', function(){
			this.show_when = false
			this.view = uis.todo
		})
	}

	function HomeCtrl(){
		return new concise.Controller('home', function(){
			this.view = uis.auth_me
		})
	}


})()
